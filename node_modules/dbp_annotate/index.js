/**
 * @author: Mostafa Bayomi
 * bayomim@tcd.ie
 * Uses dbpedia-spotlight to annotate text
 */

var mlspotlight = require('dbpedia-spotlight');
var _ = require("underscore");


exports.annotate = function (obj,cb) {
    getVSM(obj.s, function (out) {
        cb({ o: out, index: obj.index });
    });
}

var getVSM = function (input, callb) {
    var input_out = input;
    mlspotlight.fixToEndpoint('english'); // default language is english
    mlspotlight.annotate(input, function (output) {
       
        var resources = output.response.Resources;
        var surfaceForms = _.pluck(resources, "@surfaceForm");
        // offsets is an array that holds all the "positions" of the annotated entities in the original text 
        var offsets = _.pluck(resources, "@offset");
        var types = _.pluck(resources, "@types");
        
        // list of entities' types
        var ontologies = [];

        for (var i = 0; i < types.length; i++) {
           // console.log("-----\nTypes: " + types[i]);
            var one_db_Ontology = [];
            if (types[i].split(",") != "") {
                var db_ontology = types[i].split(",");
                // count number of classes that is from type DBpedia
                // if this counter == 0 it means that the entity has classes but no one of them belongs to DBpedia
                var oneEntityClasses = 0;

                for (var j = 0; j < db_ontology.length; j++) {
                    if (db_ontology[j].indexOf("DBpedia:") > -1) {
                        oneEntityClasses++; 
                        var d = db_ontology[j].toString().split("DBpedia:").pop(); // to add the class name only e.g Person
                        one_db_Ontology.push(d);
                    }
                }
                if (oneEntityClasses == 0) {//it means that the entity has classes but no one of them belongs to DBpedia
                    one_db_Ontology.push("#Not_Found");
                }
                //console.log("\n");
            }
            else {// does not belong to any dbpedia class, so by default it is a "owl#Thing"
               // console.log("No Classes");
               one_db_Ontology.push("#Not_Found");
                // do nothing .. ignore any owl#Thing
            }
            ontologies.push(one_db_Ontology);
        }
        
        var r = [];
        for (var i = 0; i < ontologies.length; i++) {
            var oneOn = { onto: ontologies[i], offs: offsets[i] };
            r.push(oneOn);
        }
        callb(r);
    })


}