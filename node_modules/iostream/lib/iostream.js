/**
 * @author: Mostafa Bayomi
 * bayomim@tcd.ie
 * 
 * This module contains general input/output methods used in my code.
 * Note, some of them are not used and some could be changed.
 */

var fs = require('fs');
var os = require('os');
var mkdirp = require('mkdirp');

// for ontological similarity
exports.readVSMFile = function (vsmFilePath) {
    var _file = fs.readFileSync(vsmFilePath);
    _file = _file.toString().replace(/#Not_Found/g,"\"#Not_Found\"");
    var vsm = _file.split("\n");
    var returnedArray = [];
    for (var index = 0; index < vsm.length; index++) {
        var sentence = JSON.parse(vsm[index]);
        returnedArray.push(sentence);
    }
    return returnedArray;

};

// for cosine similarity
exports.readTextFile = function (textFilePath) {
    var _file = fs.readFileSync(textFilePath);
    _file = _file.toString();
    var vsm = _file.split("\n");// three "\n" for haps
    return vsm;
};

// read the score array file
exports.readScoreFile = function (filePath, fileName) {
    var fileExper = "data/score/" + filePath + "/" + fileName + "_ex.txt";
    var exp = fs.readFileSync(fileExper);
    exp = exp.toString();
    return exp;
};

exports.writeOutputFile = function (data, filePath,cb) {
    var saveDir = "data/"+alfa+"/win_" + window + "_score/" + filePath;
    mkdirp(saveDir, function (err) {
        var fileExper = saveDir + "/" + fileName + "_ex.txt";
        var forExp = [];
        for (var i = 0; i < whoWithWho.length; i++) {
            var item = JSON.stringify(whoWithWho[i]).replace(/]/g, "").replace(/\[/g, "");
            if (item.length > 1) {
                item = item.split(",");
                item = item[item.length - 1];
            }
            forExp.push((parseInt(item) + 1));// +1 to match the sentence number as in the true segs
        }
        var file = fs.createWriteStream(fileExper);
        file.on('error', function (err) { console.log("My_Error:" + err); });
        var toWrite = scoreFile;
        toWrite += os.EOL;
        toWrite += "[" + forExp.toString() + "]";
        file.write(toWrite,function () {
            file.end();
            cb();
        });
        
    });
};